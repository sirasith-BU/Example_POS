@{
    ViewData["Title"] = "Category";
}
@* <h1>Catagories</h1> *@
@* SEARCH *@
<div class="mt-1">
    <form id="searchForm" class="row">
        @* Search Name *@
        <div class="col">
            <label class="form-label">Name</label>
            @* <input class="form-control" type="text" placeholder="Search by name" id="search" oninput="Search()"/> *@
            <input class="form-control bg-dark text-light" type="text" placeholder="Search by name" id="search"/>
        </div>
        @* Search Deleted *@
        <div class="col">
            <label class="form-label">Deleted</label>
            <select class="form-select bg-dark text-light" aria-label="Default select example" id="del-select">
                <option selected value="">All</option>
                <option value="1">Yes</option>
                <option value="0">No</option>
            </select>
        </div>
        @* Search Date *@
        @* <div class="col-2">
            <label class="form-label">Date</label>
            <input class="form-control bg-dark text-light" type="datetime-local" />
        </div> *@
        <div class="col d-flex justify-content-between align-items-end">
            <button class="btn btn-success">Search</button>
            <button type="submit" class="btn btn-primary" id="showAdd-btn">Create</button>
        </div>
    </form>
</div>
@* TABLE *@
<div class="table-responsive" style="height:650px; overflow-y:scroll;">
    <table class="mt-2 table table-dark table-bordered">
        <thead class="sticky-top">
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Name</th>
            <th scope="col">Description</th>
            <th scope="col">Created by</th>
            <th scope="col">Created Time</th>
            <th scope="col">Updated by</th>
            <th scope="col">Updated Time</th>
            <th scope="col">Deleted</th>
            <th scope="col">Edit</th>
            <th scope="col">Delete</th>
        </tr>
        </thead>
        <tbody id="catTableBody"></tbody>
    </table>
</div>
@* Toasts Notifications *@
<div class="position-fixed top-0 end-0 p-3" style="z-index: 9999">
    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" id="toastNoti">
        <div class="toast-header">
            @* <img src="..." class="rounded me-2" alt="..."> *@
            <strong class="me-auto" id="toast-header"></strong>
            @* <small>11 mins ago</small> *@
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            <p id="toast-body"></p>
        </div>
    </div>
</div>
@* ADD Modal *@
<div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="addCategoryForm">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="addModalLabel">Add Category</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="bg-dark p-2" style="border-radius:10px;">
                        <div class="text-light">
                            <div class="d-flex flex-column gap-2">
                                <input type="hidden" name="Id" id="edit-id" />
                                <div>
                                    <label class="form-label">Name</label>
                                    <input class="form-control" type="text" name="add-Name" placeholder="Enter name" />
                                </div>
                                <div class="col">
                                    <label class="form-label">Description</label>
                                    <input class="form-control" type="text" name="add-Description" placeholder="Enter description" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" id="add-btn">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>
@* Update Modal *@
<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="updateCategoryForm">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="addModalLabel">Update Category</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="bg-dark p-2" style="border-radius:10px;">
                        <div class="text-light">
                            <div class="d-flex flex-column gap-2">
                                <input type="hidden" name="Id" id="edit-id" />
                                <div>
                                    <label class="form-label">Name</label>
                                    <input class="form-control" type="text" name="update-Name" placeholder="Enter name" />
                                </div>
                                <div class="col">
                                    <label class="form-label">Description</label>
                                    <input class="form-control" type="text" name="update-Description" placeholder="Enter description" />
                                </div>
                                <div id="select-menu">
                                    <label class="form-label">Deleted</label>
                                    <select class="form-select" name="Delete" aria-label="Default select example">
                                        <option selected value="">Delete select menu</option>
                                        <option value="0" class="text-success fw-bold">No</option>
                                        <option value="1" class="text-danger fw-bold">Yes</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success" id="update-btn">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>
@* Delete Modal *@
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Catagory (ID: <sapn id="del-id"></sapn>)</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Do you want to delete <span id="del-name" class="fw-bold"></span>?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" id="confirm-delete-btn">Delete</button>
            </div>
        </div>
    </div>
</div>
@* Pagination *@
<div class="d-flex justify-content-between align-items-center mt-2">
    <div id="page-details"></div>
    <div class="d-flex justify-content-end align-items-center gap-2">
        <select class="form-select bg-dark text-light border-secondary" aria-label="Default select example" id="pageSize" style="width: auto;">
            <option selected value="10">10</option>
            <option value="20">20</option>
            <option value="30">30</option>
        </select>
        @* <nav aria-label="Page navigation">
            <ul class="pagination mb-0" id="pagination"></ul>
        </nav> *@
        <ul class="pagination mb-0" id="pagination"></ul>
    </div>
</div>

@section Scripts
{
    <script>
        let categories = [];
        const addModal = new bootstrap.Modal(document.getElementById('addModal'));
        const updateModal = new bootstrap.Modal(document.getElementById('updateModal'));
        const delModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        let debounceTimer = null;

        // Init data
        $(document).ready(function () {
            // $.ajax({
            //     type: 'GET',
            //     url: '/Category/GetAllCategories',
            //     success: (response) => {
            //         categories = response;
            //         console.log("Catagories", response);  

            //         categories.forEach(cat_ => {
            //             $('#catTableBody').append(`
            //                 <tr>
            //                     <td class="catId">${cat_.id}</td>
            //                     <td class="catName">${cat_.name}</td>
            //                     <td class="catDesc">${cat_.description}</td>
            //                     <td class="text-center">${cat_.createBy}</td>
            //                     <td>${cat_.createTime}</td>
            //                     <td>${cat_.updateBy}</td>
            //                     <td>${cat_.updateTime}</td>
            //                     <td>
            //                         <p class="fw-bold ${cat_.IsDelete == 1 ? 'text-danger' : 'text-success'}">
            //                             ${cat_.IsDelete == 1 ? 'Yes' : 'No'}
            //                         </p>
            //                     </td>
            //                     <td><button class="btn btn-warning edit-btn">Edit</button></td>
            //                     <td>
            //                         <form action="/Category/Delete/${cat_.Id}" method="post">
            //                             <button class="btn btn-danger">Delete</button>
            //                         </form>
            //                     </td>
            //                 </tr>
            //             `);
            //         });
            //     },
            //     error: function (xhr, status, error) {
            //         alert("Error occurred: " + xhr.responseText);
            //     }
            // });
        });

        // Search
        $('#searchForm').on('submit', function (e) {
            e.preventDefault();

            const name = $('input#search').val();
            const delStatus = $('select#del-select').val();

            if (name !== "") {
                $.ajax({
                    type: 'GET',
                    url: "/Category/Search",
                    data: { keyword: name , Delete: delStatus},
                    success: (response) => {
                    categories = response;

                    renderPage(1);
                },
                error: function (xhr, status, error) {
                    alert("Error occurred: " + xhr.responseText);
                }
                });
            } else
            {
               $('#catTableBody').empty(); // Clear Table
            }
        });

        // Show Add Modal
        $('#showAdd-btn').on('click', function (e) {
            addModal.show();
        });

        // Add
        $('#addCategoryForm').on('submit', function (e) {
            e.preventDefault();
            const name = $('input[name="add-Name"]').val();
            const description = $('input[name="add-Description"]').val();

            console.log(id, name, description, deleteVal);  

            if (name == "")
            {
                showToastNotifications("Add Category", "Please enter name");
            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '/Category/Create',
                    data: {
                        Name: name,
                        Description: description,
                    },
                    success: function (response) {
                        showToastNotifications("Add Category",response);
                        $('#catTableBody').empty(); // Clear Table
                    },
                    error: function (xhr, status, error) {
                        alert("Error occurred: " + xhr.responseText);
                        showToastNotifications("Category",xhr.responseText);
                    }
                });
                $('#edit-id').val(0);
                $('input[name="add-Name"]').val(String.empty);
                $('input[name="add-Description"]').val(String.empty);
                addModal.hide();
            }
        });

        // Show Update Modal
        $('#catTableBody').on("click", ".edit-btn", function (e) {
            e.preventDefault();
            updateModal.show();

            const row = $(this).closest('tr');
            const id = row.find('th:eq(0)').text().trim();
            const name = row.find('td:eq(0)').text().trim();
            const desc = row.find('td:eq(1)').text().trim();
            const del = row.find('td:eq(6) p').data('id');

            $('input#edit-id').val(id);
            $('input[name="update-Name"]').val(name);
            $('input[name="update-Description"]').val(desc);
            $('select[name=Delete]').val(del);
        });

        // Update
        $('#updateCategoryForm').on('submit', function (e) {
            e.preventDefault();

            const id = $('#edit-id').val(); // hidden id
            const name = $('input[name="update-Name"]').val();
            const description = $('input[name="update-Description"]').val();
            const deleteVal = $('select[name=Delete]').val();

            if (name == "")
            {
                showToastNotifications("Update Category", "Please enter name");
            }
            else if (deleteVal == "")
            {
                showToastNotifications("Update Category", "Please enter deleted");
            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '/Category/Update',
                    data: {
                        Id: id,
                        Name: name,
                        Description: description,
                        Delete: deleteVal
                    },
                    success: function (response) {
                        showToastNotifications("Update Category",response);
                        $('#catTableBody').empty(); // Clear Table
                    },
                    error: function (xhr, status, error) {
                        alert("Error occurred: " + xhr.responseText);
                        showToastNotifications("Category",xhr.responseText);
                    }
                });
                $('#edit-id').val(0);
                $('input[name="update-Name"]').val(String.empty);
                $('input[name="update-Description"]').val(String.empty);
                $('select[name=Delete]').val("");
                updateModal.hide();
            }
        });

        // Show confirm delete modal
        $(document).on('click', '.delete-btn', function (e) {
            e.preventDefault();

            const row = $(this).closest('tr');
            const id = row.find('th:eq(0)').text().trim();
            const name = row.find('td:eq(1)').text().trim();

            $('#confirm-delete-btn').data('id', id);

            $('#del-id').text(id);
            $('#del-name').text(name);

            delModal.show();
        });

        // Delete
        $('#confirm-delete-btn').on("click", function () {
            const id = $(this).data('id');

            $.ajax({
                type:'GET',
                url : '/Category/Delete',
                data: {Id : id},
                success: function (response) {
                    showToastNotifications("Delete Category", response);
                    $('#catTableBody').empty(); // Clear Table
                },
                error: function (xhr) {
                    showToastNotifications("Delete Error", xhr.responseText);
                }
                
            })
            delModal.hide();
        });

        function showToastNotifications(header, body)
        {
            $('#toast-header').text(header);
            $('#toast-body').text(body);
            $('#toastNoti').toast('show');
        }

        // Search Real Time
        $('#search, #del-select').on('input', function () {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(Search, 500);
        });
        function Search()
        {
            const name = $('input#search').val();
            const delStatus = $('select#del-select').val();

            if (name !== "") {
                $.ajax({
                    type: 'GET',
                    url: "/Category/Search",
                    data: { keyword: name , Delete: delStatus},
                    success: (response) => {
                    categories = response;

                    renderPage(1);
                },
                error: function (xhr, status, error) {
                    alert("Error occurred: " + xhr.responseText);
                }
                });
            }
            else {
                $('#catTableBody').empty();
            }
        }

        function renderPage(page) {
            // Pagination
            const pageSize = $('select#pageSize').val();
            const totalPages = Math.ceil(categories.length / pageSize);
            const start = (page - 1) * pageSize;
            const end = parseInt(start) + parseInt(pageSize);
            const categoriesPaging = categories.slice(start, end);

            const from = start + 1;
            const to = Math.min(end, categories.length);
            $('div#page-details').text(`Showing ${from} to ${to} of ${categories.length} entries`);


            $('#pagination').empty(); // Clear Pagination
            for (let i = 1; i <= totalPages; i++) {
                $('#pagination').append(`
                    <li class="page-item">
                        <a class="page-link page-btn ${i === page ? 'bg-dark text-white' : ''}" href="#">${i}</a>
                    </li>
                `);
            }

            $('#catTableBody').empty(); // Clear Table
                categoriesPaging.forEach(cat_ => {
                $('#catTableBody').append(`
                    <tr>
                        <th scope="row" class="catId">${cat_.id}</td>
                        <td class="catName">${cat_.name}</td>
                        <td class="catDesc">${cat_.description}</td>
                        <td class="text-center">${cat_.createBy}</td>
                        <td>${cat_.createTime}</td>
                        <td class="text-center">${cat_.updateBy}</td>
                        <td>${cat_.updateTime}</td>
                        <td class="text-center">
                            <p data-id=${cat_.isDelete} class="fw-bold ${cat_.isDelete == 1 ? 'text-danger' : 'text-success'}">
                                ${cat_.isDelete == 1 ? 'Yes' : 'No'}
                            </p>
                        </td>
                        <td><button type="button" class="btn btn-warning edit-btn">Edit</button></td>
                        <td><button type="button" class="btn btn-danger delete-btn" data-id="${cat_.id}">Delete</button></td>
                    </tr>
                `);
            });
        }

        // Change page
        $(document).on('click', '.page-btn', function (e) {
            e.preventDefault();
            const page = parseInt($(this).text());
            renderPage(page);
        });

        // Update page Size Real Time
        $('#pageSize').on('change', function () {
            renderPage(1);
        });
</script>
}