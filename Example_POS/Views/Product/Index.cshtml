@using Example_POS.DTOs.Category;
@* @model IEnumerable<CategoryDTO> *@
@{
    ViewData["Title"] = "Product";
}

@* ADD / UPDATE *@
<h5 id="title">Add Product</h5>
<div class="bg-dark p-2" style="border-radius:10px;">
    <form id="productForm">
        <div class="row text-light">
            <input type="hidden" name="Id" id="edit-id" />
            <div class="col">
                <label class="form-label">Category</label>
                <select class="form-select" aria-label="Default select example" id="cat-select">
                    <option selected value="">Select Category</option>
                </select>
            </div>
            <div class="col">
                <label class="form-label">Name</label>
                <input class="form-control" type="text" name="name" placeholder="Enter name" />
            </div>
            <div class="col">
                <label class="form-label">Quantity</label>
                <input class="form-control" type="number" name="quantity" placeholder="Enter quantity" />
            </div>
            <div class="col">
                <label class="form-label">Price</label>
                <input class="form-control" type="text" name="price" placeholder="Enter Price" />
            </div>
            <div class="col-3">
                <label class="form-label">Description</label>
                <input class="form-control" type="text" name="description" placeholder="Enter description" />
            </div>
            <div class="col-2 d-flex flex-column justify-content-end">
                <button type="submit" class="btn btn-primary" id="add-btn">Create</button>
                <button type="submit" class="btn btn-success d-none" id="update-btn">Update</button>
            </div>
        </div>
    </form>
</div>
@* SEARCH *@
<div class="mt-3">
    <form id="searchForm" class="row">
        <div class="col-5">
            <label class="form-label">Search</label>
            <input class="form-control" type="text" placeholder="Search by name" id="search" />
        </div>
        <div class="col-7 d-flex align-items-end">
            <button class="btn btn-success">Search</button>
        </div>
    </form>
</div>
@* TABLE *@
<h1 class="mt-3">Products</h1>
<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Description</th>
            <th>CategoryId</th>
            <th>CategoryName</th>
            <th>Created by</th>
            <th>Created Time</th>
            <th>Updated by</th>
            <th>Updated Time</th>
            <th>Deleted</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody id="prodTableBody"></tbody>
</table>
@* Toasts Notifications *@
<div class="position-fixed top-0 end-0 p-3" style="z-index: 9999">
    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" id="toastNoti">
        <div class="toast-header">
            @* <img src="..." class="rounded me-2" alt="..."> *@
            <strong class="me-auto" id="toast-header"></strong>
            @* <small>11 mins ago</small> *@
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            <p id="toast-body"></p>
        </div>
    </div>
</div>
@* DELETE Modal *@
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Product (ID: <sapn id="del-id"></sapn>)</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Do you want to delete <span id="del-name" class="fw-bold"></span>?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" id="confirm-delete-btn">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let categoryOptions = []
        const delModal = new bootstrap.Modal(document.getElementById('deleteModal'));

        // Get Category Options
        $(document).ready(function () {
            $.ajax({
                type: 'GET',
                url: '/Category/CatagoryOptions',
                success: (response) => {
                    categoryOptions = response;
                    // console.log(response);

                    categoryOptions.forEach(cat_ => {
                        $('#cat-select').append(`
                            <option class="cat-val" value="${cat_.id}">${cat_.name}</option>
                        `);
                    });
                },
                error: function (xhr, status, error) {
                    alert("Error occurred: " + xhr.responseText);
                }
            });
        });

        // Search
        $('#searchForm').on('submit', function (e) {
            e.preventDefault();

            const name = $('input#search').val();
            if (name !== "") {
                $.ajax({
                    type: 'GET',
                    url: "/Product/Search",
                    data: { keyword: name },
                    success: (response) => {
                    products = response;

                    $('#prodTableBody').empty(); // Clear Table
                    products.forEach(prod_ => {
                        $('#prodTableBody').append(`
                            <tr>
                                <td class="prodId">${prod_.id}</td>
                                <td class="prodName">${prod_.name}</td>
                                <td class="prodQuan">${prod_.quantity}</td>
                                <td class="prodPrice">${prod_.price}</td>
                                <td class="prodDesc">${prod_.description}</td>
                                <td class="catId">${prod_.categoryId}</td>
                                <td class="catName">${prod_.categoryName}</td>
                                <td>${prod_.createBy}</td>
                                <td>${prod_.createTime}</td>
                                <td>${prod_.updateBy}</td>
                                <td>${prod_.updateTime}</td>
                                <td>
                                    <p class="fw-bold ${prod_.isDelete == 1 ? 'text-danger' : 'text-success'}">
                                        ${prod_.isDelete == 1 ? 'Yes' : 'No'}
                                    </p>
                                </td>
                                <td><button type="button" class="btn btn-warning edit-btn">Edit</button></td>
                                <td><button type="button" class="btn btn-danger delete-btn" data-id="${prod_.id}">Delete</button></td>
                            </tr>
                        `);
                    });
                },
                error: function (xhr, status, error) {
                    alert("Error occurred: " + xhr.responseText);
                }
                });
            } else
            {
               $('#catTableBody').empty(); // Clear Table
            }
        });

        // Create | Update
        $('#productForm').on('submit', function (e) {
            e.preventDefault();

            const id = $('#edit-id').val(); // hidden id
            const cat_id = $('#cat-select').val();
            const name = $('input[name="name"]').val();
            const quantity = $('input[name="quantity"]').val();
            const price = $('input[name="price"]').val();
            const description = $('input[name="description"]').val();

            if (cat_id == "" )
            {
                showToastNotifications("Category","Please select category");
            }
            else if (name == "")
            {
                showToastNotifications("Name","Please enter name");
            }
            else if (quantity == 0)
            {
                showToastNotifications("Quantity","Please enter quantity");
            }
            else if (price == 0)
            {
                showToastNotifications("Price","Please enter price");
            }
            else {
                const isUpdate = !$('#update-btn').hasClass('d-none');

                if(isUpdate){
                    $("h5#title").text("Add Product");
                    $("button#add-btn").removeClass("d-none");
                    $("button#update-btn").addClass("d-none");
                    $('#edit-id').val(0);
                }

                const url = isUpdate ? '/Product/Update' : '/Product/Create';

                $.ajax({
                    type: 'POST',
                    url: url,
                    data: {
                        Id: id,
                        CategoryId: cat_id,
                        Name: name,
                        Quantity: quantity,
                        Price: price,
                        Description: description
                    },
                    success: function (response) {
                        if (isUpdate){
                            showToastNotifications("Update Product",response);
                        } else {
                            showToastNotifications("Add Product",response);
                        }

                        console.log(response);
                        $('#prodTableBody').empty(); // Clear Table
                    },
                    error: function (xhr, status, error) {
                        alert("Error occurred: " + xhr.responseText);
                        showToastNotifications("Category",xhr.responseText);
                    }
                });
                $('#cat-select').val("");
                $('input[name="name"]').val(String.empty);
                $('input[name="quantity"]').val(String.empty);
                $('input[name="price"]').val(String.empty);
                $('input[name="description"]').val(String.empty);
            }
        });

        // Click for edit
        $('#prodTableBody').on("click", ".edit-btn", function (e) {
            e.preventDefault();
            $("h5#title").text("Update Category");

            // Update Mode
            $("button#add-btn").addClass("d-none");
            $("button#update-btn").removeClass("d-none");

            const row = $(this).closest('tr');
            const id = row.find('td:eq(0)').text().trim();
            const name = row.find('td:eq(1)').text().trim();
            const quantity = row.find('td:eq(2)').text().trim();
            const price = row.find('td:eq(3)').text().trim();
            const desc = row.find('td:eq(4)').text().trim();
            const catId = row.find('td:eq(5)').text().trim();

            $('select#cat-select').val(catId);
            $('input[name="name"]').val(name);
            $('input[name=quantity]').val(quantity);
            $('input[name=price]').val(price);
            $('input[name="description"]').val(desc);
            $('input#edit-id').val(id);
        });

        function showToastNotifications(header, body)
        {
            $('#toast-header').text(header);
            $('#toast-body').text(body);
            $('#toastNoti').toast('show');
        }

        // Show confirm delete modal
        $(document).on('click', '.delete-btn', function (e) {
            e.preventDefault();

            const row = $(this).closest('tr');
            const id = row.find('td:eq(0)').text().trim();
            const name = row.find('td:eq(1)').text().trim();

            $('#confirm-delete-btn').data('id', id);

            $('#del-id').text(id);
            $('#del-name').text(name);

            delModal.show();
        });

        // Confirm Delete
        $('#confirm-delete-btn').on("click", function () {
            const id = $(this).data('id');
            console.log(id);

            $.ajax({
                type:'GET',
                url : '/Product/Delete',
                data: {Id : id},
                success: function (response) {
                    showToastNotifications("Delete Product", response);
                    delModal.hide();
                    $('#prodTableBody').empty(); // Clear Table
                },
                error: function (xhr) {
                    showToastNotifications("Delete Error", xhr.responseText);
                }
            })
        });
    </script>
}